import 'package:arjunagym/Models/GymPlan.dart';
import 'package:arjunagym/Provider/PlanProvider.dart';
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';

class AddGymPlanPage extends StatefulWidget {
  @override
  _AddGymPlanPageState createState() => _AddGymPlanPageState();
}

class _AddGymPlanPageState extends State<AddGymPlanPage> {
  final _formKey = GlobalKey<FormState>();
  final _nameController = TextEditingController();
  final _monthsController = TextEditingController();
  final _feeController = TextEditingController();
  bool _personalTraining = false;

  void _saveForm() async {
    if (_formKey.currentState!.validate()) {
      final newPlan = GymPlan(
        id: '',  // ID will be generated by Firestore
        name: _nameController.text,
        months: int.parse(_monthsController.text),
        fee: double.parse(_feeController.text),
        personalTraining: _personalTraining,
      );

      await Provider.of<GymPlanProvider>(context, listen: false).addPlan(newPlan);
      Navigator.of(context).pop();
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Add Gym Plan'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            children: [
              TextFormField(
                controller: _nameController,
                decoration: InputDecoration(labelText: 'Plan Name'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter a name';
                  }
                  return null;
                },
              ),
              TextFormField(
                controller: _monthsController,
                decoration: InputDecoration(labelText: 'Months'),
                keyboardType: TextInputType.number,
                validator: (value) {
                  if (value == null || value.isEmpty || int.tryParse(value) == null) {
                    return 'Please enter a valid number of months';
                  }
                  return null;
                },
              ),
              TextFormField(
                controller: _feeController,
                decoration: InputDecoration(labelText: 'Fee'),
                keyboardType: TextInputType.number,
                validator: (value) {
                  if (value == null || value.isEmpty || double.tryParse(value) == null) {
                    return 'Please enter a valid fee';
                  }
                  return null;
                },
              ),
              SwitchListTile(
                title: Text('Personal Training'),
                value: _personalTraining,
                onChanged: (value) {
                  setState(() {
                    _personalTraining = value;
                  });
                },
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: _saveForm,
                child: Text('Save Plan'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
